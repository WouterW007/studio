rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Rules for user data
    match /users/{userId} {
        // Only authenticated users can read their own user document
        allow read: if request.auth != null && request.auth.uid == userId;
        // No creation or update allowed here directly; user creation happens via auth
    }

    // Pending Groups collection (for newly submitted groups awaiting approval):
    // - Authenticated users can create new pending groups.
    // - Admins can read, update, and delete pending group documents.
    match /pendingGroups/{pendingGroupId} {
      allow create: if request.auth != null;
      allow read, update, delete: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAdmin == true;
      // Allow listing for admins
      allow list: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAdmin == true;
    }

    // Groups collection (for accepted groups):
    // - Allow public read and list access for groups with status 'active'
    match /groups/{groupId} {
      allow read, list: if resource.data.status == 'active'; // Allow anyone to read/list groups with status 'active'

      // Keep existing admin rules for broader access/management
      allow list: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAdmin == true; // Admins can list all groups regardless of status
      allow read: if request.auth != null; // Authenticated users can still read any group (useful if they were the submitter, for example - adjust if needed)
      allow write: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAdmin == true; // Only admins can write (create, update, delete)
    }

    // Announcements collection:
    // - Allow public read and list access for announcements
    match /announcements/{announcementId} {
      allow read, list: if true; // Allow anyone (authenticated or not) to read and list announcements
      allow write: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAdmin == true; // Only admins can write
    }

    // Helper function to check if a user is an admin (based on a flag in their user document)
    function isAdmin() {
      return request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAdmin == true;
    }


  }
}